<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>passive-scanner on zznQ</title><link>https://zznq.imipy.com/tags/passive-scanner/</link><description>Recent content in passive-scanner on zznQ</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 20 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zznq.imipy.com/tags/passive-scanner/index.xml" rel="self" type="application/rss+xml"/><item><title>被动扫描器HTTP(S)代理初探</title><link>https://zznq.imipy.com/posts/passive-scanner-https-proxy/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://zznq.imipy.com/posts/passive-scanner-https-proxy/</guid><description>如何代理 http(s) 流量 HTTP 代理的协议基于 HTTP，因此 HTTP 代理本身就是一个 HTTP 的服务，而其工作原理本质上就是中间人（MITM) ，即读取当前客户端的 HTTP 请求，从代理发送出去并获得响应，然后将响应返回给客户端。
使用 netcat -lv -p 8881 监听 127.0.0.1:8881
访问 http://**.** nc 的数据包为: GET http://hyuga.co/ HTTP/1.1 Host: hyuga.co Proxy-Connection: keep-alive Pragma: no-cache Cache-Control: no-cache Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://hyuga.co/ Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 ... 访问 https://**.** nc 的数据包为: CONNECT github.com:443 HTTP/1.1 Host: github.com:443 Proxy-Connection: keep-alive User-Agent: Mozilla/5.0 golang 实现 http(s) 代理服务器 使用隧道直接双向复制 https 数据</description></item></channel></rss>