<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on zznQ</title><link>https://zznq.imipy.com/tags/golang/</link><description>Recent content in golang on zznQ</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 25 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zznq.imipy.com/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>golang web audit 小记</title><link>https://zznq.imipy.com/posts/golang-web-audit/</link><pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate><guid>https://zznq.imipy.com/posts/golang-web-audit/</guid><description>&lt;p>简单记录下Golang web代码审计。&lt;/p></description></item><item><title>cel-go 初探</title><link>https://zznq.imipy.com/posts/cel-go-demo/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>https://zznq.imipy.com/posts/cel-go-demo/</guid><description>之前看到 Xray - 如何编写expression表达式 提到这个库 https://github.com/google/cel-spec
正好工作方面也遇到这个需求了，就来简单的研究下，先看下相关资料：
cel-spec 介绍 cel-go github cel-go 入门文档 cel 是建立 protocol 之上的。
在 demo 项目下创建 fprint 包；并在其目录下创建 fprint.proto 文件
syntax = &amp;#34;proto3&amp;#34;;package fprint; // https://developers.google.com/protocol-buffers/docs/proto3#packages option go_package = &amp;#34;fprint/bp&amp;#34;; // golang package 包名 message Response { string url = 1; int32 status = 2 ; map&amp;lt;string, string&amp;gt; headers = 3; string content_type = 4; string title = 5; bytes body = 6; string md5 = 7;}使用 $ protoc --go_out=.</description></item></channel></rss>